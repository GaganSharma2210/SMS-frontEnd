{"ast":null,"code":"var _jsxFileName = \"/Users/sharmagagan413/react-project/react-frontend/src/components/ListStudentComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport StudentService from '../services/StudentService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ListStudentComponent = () => {\n  _s();\n  const [students, setStudent] = useState([]);\n  useEffect(() => {\n    getStudents().then(response => {\n      setStudent(response.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center\",\n      children: \"Student List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-striped table-bordered\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \" Student Id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \" Student Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \" Student Contact Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \" Student Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \" Student Pincode\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: students.map(student => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\" \", student.id]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 46\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\" \", student.name, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 46\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\" \", student.contactNumber]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 46\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\" \", student.address]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 46\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\" \", student.pincode]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 46\n            }, this)]\n          }, student.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 41\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n_s(ListStudentComponent, \"aus0LqTftm+9xzi/MkI/NW3GZfI=\");\n_c = ListStudentComponent;\nexport default ListStudentComponent;\nvar _c;\n$RefreshReg$(_c, \"ListStudentComponent\");","map":{"version":3,"names":["React","useEffect","useState","StudentService","jsxDEV","_jsxDEV","ListStudentComponent","_s","students","setStudent","getStudents","then","response","data","catch","error","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","student","id","name","contactNumber","address","pincode","_c","$RefreshReg$"],"sources":["/Users/sharmagagan413/react-project/react-frontend/src/components/ListStudentComponent.jsx"],"sourcesContent":["import React, {useEffect, useState} from 'react'\nimport StudentService from '../services/StudentService' \n\nconst ListStudentComponent = () => {\n  \n    const [students, setStudent] = useState([])\n    \n     useEffect(() =>{\n        getStudents().then((response) =>{\n            setStudent(response.data);\n        }).catch(error =>{\n            console.log(error);\n        })\n    },[])   \n  \n    return (\n    \n        <div className='container'>\n                 <h2 className=\"text-center\">Student List</h2>\n                 <br></br>\n                 <div className = \"row\">\n                        <table className = \"table table-striped table-bordered\">\n\n                            <thead>\n                                <tr>\n                                    <th> Student Id</th>\n                                    <th> Student Name</th>\n                                    <th> Student Contact Number</th>\n                                    <th> Student Address</th>\n                                    <th> Student Pincode</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {\n                                    students.map(\n                                        student => \n                                        <tr key = {student.id}>\n                                             <td> {student.id}</td>\n                                             <td> { student.name} </td>   \n                                             <td> {student.contactNumber}</td>\n                                             <td> {student.address}</td>\n                                             <td> {student.pincode}</td>\n                                        </tr>\n                                    )\n                                }\n                            </tbody>\n                        </table>\n\n                 </div>\n\n            </div>\n\n    \n  )\n}\n\nexport default ListStudentComponent"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}